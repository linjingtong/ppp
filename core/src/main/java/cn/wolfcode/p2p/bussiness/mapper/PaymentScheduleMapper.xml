<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.p2p.bussiness.mapper.PaymentScheduleMapper" >
  <resultMap id="BaseResultMap" type="cn.wolfcode.p2p.bussiness.domain.PaymentSchedule" >
    <id column="id" property="id" />
    <result column="deadLine" property="deadLine" />
    <result column="payDate" property="payDate" />
    <result column="totalAmount" property="totalAmount" />
    <result column="principal" property="principal" />
    <result column="interest" property="interest" />
    <result column="monthIndex" property="monthIndex" />
    <result column="state" property="state" />
    <result column="bidRequestType" property="bidRequestType" />
    <result column="returnType" property="returnType" />
    <result column="bidRequestId" property="bidRequestId" />
    <result column="bidRequestTitle" property="bidRequestTitle" />
    <association property="borrowUser" javaType="cn.wolfcode.p2p.base.domain.Logininfo" columnPrefix="bu_">
      <id column="id" property="id"/>
      <result column="username" property="username"/>
    </association>
    <collection property="details" column="id" ofType="cn.wolfcode.p2p.bussiness.domain.PaymentScheduleDetail"
                select="cn.wolfcode.p2p.bussiness.mapper.PaymentScheduleDetailMapper.selectByPaymentScheduleId"></collection>
  </resultMap>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
    insert into `paymentschedule` (deadLine, payDate, totalAmount, principal, interest, monthIndex, 
      state, bidRequestType, returnType, bidRequestId, borrowUser_id, bidRequestTitle
      )
    values (#{deadLine}, #{payDate}, #{totalAmount}, #{principal}, #{interest}, #{monthIndex}, 
      #{state}, #{bidRequestType}, #{returnType}, #{bidRequestId}, #{borrowUser.id}, #{bidRequestTitle}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.p2p.bussiness.domain.PaymentSchedule" >
    update `paymentschedule`
    set deadLine = #{deadLine},
      payDate = #{payDate},
      totalAmount = #{totalAmount},
      principal = #{principal},
      interest = #{interest},
      monthIndex = #{monthIndex},
      state = #{state},
      bidRequestType = #{bidRequestType},
      returnType = #{returnType},
      bidRequestId = #{bidRequestId},
      borrowUser_id = #{borrowUser.id},
      bidRequestTitle = #{bidRequestTitle}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select <include refid="base_column"/>
    from <include refid="base_table"/>
    where ps.id = #{id}
  </select>
    <select id="queryForList" resultMap="BaseResultMap">
      select <include refid="base_column"/>
      from <include refid="base_table"/>
      <include refid="base_where"/>
    </select>
    <select id="queryByBidRequestId" resultMap="BaseResultMap">
      select <include refid="base_column"/>
      from <include refid="base_table"/>
      WHERE ps.bidRequestId = #{bidRequestId}
    </select>
    <sql id="base_column">
    ps.id, ps.deadLine, ps.payDate, ps.totalAmount, ps.principal, ps.interest, ps.monthIndex, ps.state,
    ps.bidRequestType, ps.returnType, ps.bidRequestId, ps.bidRequestTitle,
    bu.id AS bu_id , bu.username AS bu_username
  </sql>
  <sql id="base_table">
    `paymentschedule` ps
    JOIN logininfo bu ON ps.borrowUser_id = bu.id
  </sql>
  <sql id="base_where">
   <where>
     <if test="borrowUserId!=null">
       AND bu.id = #{borrowUserId}
     </if>
   </where>
  </sql>
</mapper>