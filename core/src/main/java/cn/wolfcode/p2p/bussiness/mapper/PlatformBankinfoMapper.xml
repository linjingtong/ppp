<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.p2p.bussiness.mapper.PlatformBankinfoMapper" >
  <resultMap id="BaseResultMap" type="cn.wolfcode.p2p.bussiness.domain.PlatformBankinfo" >
    <id column="id" property="id" />
    <result column="bankName" property="bankName" />
    <result column="bankNumber" property="bankNumber" />
    <result column="bankForkName" property="bankForkName" />
    <result column="accountName" property="accountName" />
  </resultMap>
  <insert id="insert"  useGeneratedKeys="true" keyProperty="id" >
    insert into `platformbankinfo` (bankName, bankNumber, bankForkName, accountName)
    values (#{bankName}, #{bankNumber}, #{bankForkName}, #{accountName})
  </insert>
  <update id="updateByPrimaryKey" >
    update `platformbankinfo`
    set bankName = #{bankName},
      bankNumber = #{bankNumber},
      bankForkName = #{bankForkName},
      accountName = #{accountName}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
    select id, bankName, bankNumber, bankForkName, accountName
    from `platformbankinfo`
    where id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, bankName, bankNumber, bankForkName, accountName
    from `platformbankinfo`
  </select>
  <select id="queryForList" resultMap="BaseResultMap">
    select id, bankName, bankNumber, bankForkName, accountName
    from `platformbankinfo`
    <include refid="base_where"/>
  </select>

  <sql id="base_where"></sql>
</mapper>