<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.p2p.base.mapper.UserFileMapper" >
  <resultMap id="BaseResultMap" type="cn.wolfcode.p2p.base.domain.UserFile" >
    <id column="id" property="id" />
    <result column="state" property="state" />
    <result column="remark" property="remark" />
    <result column="auditTime" property="auditTime" />
    <result column="applyTime" property="applyTime" />
    <result column="score" property="score" />
    <result column="image" property="image" />
    <association property="applier" javaType="cn.wolfcode.p2p.base.domain.Logininfo" columnPrefix="ap_">
      <id column="id" property="id"/>
      <result column="username" property="username"/>
    </association>
    <association property="auditor" javaType="cn.wolfcode.p2p.base.domain.Logininfo" columnPrefix="au_">
      <id column="id" property="id"/>
      <result column="username" property="username"/>
    </association>
    <association property="fileType" column="filetype_id" javaType="cn.wolfcode.p2p.base.domain.SystemDictionaryItem"
                 select="cn.wolfcode.p2p.base.mapper.SystemDictionaryItemMapper.selectByPrimaryKey"></association>
  </resultMap>
  <insert id="insert" parameterType="cn.wolfcode.p2p.base.domain.UserFile" useGeneratedKeys="true" keyProperty="id" >
    insert into `userfile` (state, remark, auditTime, applyTime, auditor_id, applier_id, 
      score, image, filetype_id)
    values (#{state}, #{remark}, #{auditTime}, #{applyTime}, #{auditor.id}, #{applier.id}, 
      #{score}, #{image}, #{fileType.id})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.p2p.base.domain.UserFile" >
    update `userfile`
    set state = #{state},
      remark = #{remark},
      auditTime = #{auditTime},
      applyTime = #{applyTime},
      auditor_id = #{auditor.id},
      applier_id = #{applier.id},
      score = #{score},
      image = #{image},
      filetype_id = #{fileType.id}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select <include refid="base_columns"/>
    from <include refid="base_table"/>
    where uf.id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select <include refid="base_columns"/>
    from <include refid="base_table"/>
  </select>

  <select id="queryForList" resultMap="BaseResultMap">
    select <include refid="base_columns"/>
    from <include refid="base_table"/>
    <include refid="base_where"/>
  </select>

  <select id="getHasNullFileType" resultMap="BaseResultMap">
    select <include refid="base_columns"/>
    from <include refid="base_table"/>
    WHERE uf.filetype_id IS NULL
  </select>
    <select id="queryListByApplierId" resultMap="BaseResultMap">
      select <include refid="base_columns"/>
      from <include refid="base_table"/>
      WHERE uf.applier_id =#{applierId} and uf.state =#{state}
    </select>

    <sql id="base_where">
    <where>
      <if test="hasFileType==true">
        uf.filetype_id IS NOT NULL
      </if>
      <if test="state!=-1">
        AND uf.state=#{state}
      </if>
      <if test="beginDate!=null">
        AND uf.applyTime>=#{beginDate}
      </if>
      <if test="endDate!=null">
        AND uf.applyTime&lt;=#{endDate}
      </if>
    </where>
 </sql>
  <sql id="base_columns">
    uf.id, uf.state, uf.remark, uf.auditTime, uf.applyTime, uf.score, uf.image, uf.filetype_id,
    ap.id AS ap_id,ap.username AS ap_username,
    au.id AS au_id,au.username AS au_username
  </sql>
  <sql id="base_table">
    `userfile` uf
    JOIN logininfo ap ON uf.applier_id=ap.id
    LEFT JOIN logininfo au ON uf.auditor_id=au.id
  </sql>
</mapper>